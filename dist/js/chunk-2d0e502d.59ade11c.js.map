{"version":3,"sources":["webpack:///./src/views/Data.vue","webpack:///./src/views/Data.vue?434b"],"names":["class","Statistics","statistic","idx","country","cases","total","deaths","new","recovered","active","critical","tests","population","name","data","all","methods","getCountriesStatistics","AxiosConfiguration","get","console","warn","renderCountriesStatistics","this","push","loadCountriesStatistics","res","response","mounted","setTimeout","render","__scopeId"],"mappings":"oNAyCSA,MAAM,0D,EACX,eAaQ,cAZR,eAWK,MAXDA,MAAM,aAAW,CACnB,eAAU,UAAN,KACJ,eAAgB,UAAZ,WACJ,eAAoB,UAAhB,eACJ,eAAmB,UAAf,cACJ,eAAwB,UAApB,mBACJ,eAAqB,UAAjB,gBACJ,eAAyB,UAArB,oBACJ,eAAiB,UAAb,YACJ,eAAgB,UAAZ,WACJ,eAAmB,UAAf,kB,2EAZR,eA6BQ,QA7BR,EA6BQ,CA5BN,EAcA,eAaQ,e,mBAZR,eAWK,2BAX0B,EAAAC,YAAU,SAA7BC,EAAWC,G,wBAAvB,eAWK,WAVH,eAAsB,yBAAfA,EAAM,GAAH,GACV,eAAgC,yBAAzBD,EAAUE,SAAO,GACxB,eAAoC,yBAA7BF,EAAUG,MAAMC,OAAK,GAC5B,eAAmC,yBAA5BJ,EAAUK,OAAOC,KAAG,GAC3B,eAAwC,yBAAjCN,EAAUG,MAAMI,WAAS,GAChC,eAAqC,yBAA9BP,EAAUG,MAAMK,QAAM,GAC7B,eAAuC,yBAAhCR,EAAUG,MAAMM,UAAQ,GAC/B,eAAyC,yBAAlCT,EAAUK,OAAM,cACvB,eAAwC,yBAAjCL,EAAUU,MAAK,cACtB,eAAmC,yBAA5BV,EAAUW,YAAU,Q,6DAhElB,GACbC,KAAM,OACNC,KAFa,WAGX,MAAO,CACLd,WAAY,GACZe,IAAK,KAGTC,QAAS,CACDC,uBADC,WACwB,sKAEdC,EAAA,KAAmBC,MAFL,2EAI3BC,QAAQC,KAAR,MAJ2B,2DAO/BC,0BARO,SAQmBtB,GACxB,IAAK,IAAIC,KAAaD,EACpBuB,KAAKvB,WAAWwB,KAAhB,kBAAyBxB,EAAWC,KAEtCsB,KAAKR,IAAMf,EAAW,MAElByB,wBAdC,WAcyB,8KACZ,EAAKR,yBADO,cACxBS,EADwB,yBAEvB,EAAKJ,0BAA0BI,EAAIZ,KAAKa,WAFjB,+CAK5BC,QA3BO,WA2BG,wJACdC,YAAW,WACT,EAAKJ,4BACJ,KAHW,+CC3BlB,EAAOK,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-2d0e502d.59ade11c.js","sourcesContent":["<script>\r\nimport AxiosConfiguration from \"../AxiosConfiguration\";\r\n\r\nexport default {\r\n  name: \"Data\",\r\n  data() {\r\n    return {\r\n      Statistics: [],\r\n      all: {},\r\n    }\r\n  },\r\n  methods: {\r\n    async getCountriesStatistics() {\r\n      try {\r\n        return await AxiosConfiguration.get();\r\n      } catch (e) {\r\n        console.warn(e);\r\n      }\r\n    },\r\n    renderCountriesStatistics(Statistics) {\r\n      for (let statistic in Statistics) {\r\n        this.Statistics.push({...Statistics[statistic]});\r\n      }\r\n      this.all = Statistics[217];\r\n    },\r\n    async loadCountriesStatistics() {\r\n      const res = await this.getCountriesStatistics();\r\n      return this.renderCountriesStatistics(res.data.response);\r\n    }\r\n  },\r\n  async mounted() {\r\n    setTimeout(() => {\r\n      this.loadCountriesStatistics()\r\n    }, 1000)\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<template>\r\n  <table class=\"table table-hover table-bordered table-hover dataTable\">\r\n    <thead>\r\n    <tr class=\"my-header\">\r\n      <td>#</td>\r\n      <td>Country</td>\r\n      <td>Total Cases</td>\r\n      <td>New Deaths</td>\r\n      <td>Total Recovered</td>\r\n      <td>Active Cases</td>\r\n      <td>Serious/Critical</td>\r\n      <td>Death 1M</td>\r\n      <td>Test 1M</td>\r\n      <td>Population</td>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr v-for=\"(statistic, idx) in Statistics\">\r\n      <td>{{ idx + 1 }}</td>\r\n      <td>{{ statistic.country }}</td>\r\n      <td>{{ statistic.cases.total }}</td>\r\n      <td>{{ statistic.deaths.new }}</td>\r\n      <td>{{ statistic.cases.recovered }}</td>\r\n      <td>{{ statistic.cases.active }}</td>\r\n      <td>{{ statistic.cases.critical }}</td>\r\n      <td>{{ statistic.deaths[\"1M_pop\"] }}</td>\r\n      <td>{{ statistic.tests[\"1M_pop\"] }}</td>\r\n      <td>{{ statistic.population }}</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n</style>\r\n","import { render } from \"./Data.vue?vue&type=template&id=282c3e1b&scoped=true\"\nimport script from \"./Data.vue?vue&type=script&lang=js\"\nexport * from \"./Data.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-282c3e1b\"\n\nexport default script"],"sourceRoot":""}